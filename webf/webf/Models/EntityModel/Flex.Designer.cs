//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("FlexDBModel", "FK_KeyTable_KeyType", "KeyType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(webf.Models.EntityModel.KeyType), "KeyTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(webf.Models.EntityModel.KeyTable), true)]
[assembly: EdmRelationshipAttribute("FlexDBModel", "FK_KeyTable_PrivKeyStorage", "PrivKeyStorage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(webf.Models.EntityModel.PrivKeyStorage), "KeyTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(webf.Models.EntityModel.KeyTable), true)]
[assembly: EdmRelationshipAttribute("FlexDBModel", "FK_KeyTable_PubKeyStorage", "PubKeyStorage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(webf.Models.EntityModel.PubKeyStorage), "KeyTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(webf.Models.EntityModel.KeyTable), true)]
[assembly: EdmRelationshipAttribute("FlexDBModel", "FK_UserProfile_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(webf.Models.EntityModel.aspnet_Users), "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(webf.Models.EntityModel.UserProfile), true)]
[assembly: EdmRelationshipAttribute("FlexDBModel", "FK_UserProfile_KeyTable", "KeyTable", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(webf.Models.EntityModel.KeyTable), "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(webf.Models.EntityModel.UserProfile), true)]
[assembly: EdmRelationshipAttribute("FlexDBModel", "FK_UserProfile_MilitaryDegree", "MilitaryDegree", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(webf.Models.EntityModel.MilitaryDegree), "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(webf.Models.EntityModel.UserProfile), true)]
[assembly: EdmRelationshipAttribute("FlexDBModel", "FK_UserProfile_Contacts", "Contacts", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(webf.Models.EntityModel.Contacts), "UserProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(webf.Models.EntityModel.UserProfile), true)]

#endregion

namespace webf.Models.EntityModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FlexDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FlexDBEntities object using the connection string found in the 'FlexDBEntities' section of the application configuration file.
        /// </summary>
        public FlexDBEntities() : base("name=FlexDBEntities", "FlexDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FlexDBEntities object.
        /// </summary>
        public FlexDBEntities(string connectionString) : base(connectionString, "FlexDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FlexDBEntities object.
        /// </summary>
        public FlexDBEntities(EntityConnection connection) : base(connection, "FlexDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Users> aspnet_Users
        {
            get
            {
                if ((_aspnet_Users == null))
                {
                    _aspnet_Users = base.CreateObjectSet<aspnet_Users>("aspnet_Users");
                }
                return _aspnet_Users;
            }
        }
        private ObjectSet<aspnet_Users> _aspnet_Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<KeyTable> KeyTable
        {
            get
            {
                if ((_KeyTable == null))
                {
                    _KeyTable = base.CreateObjectSet<KeyTable>("KeyTable");
                }
                return _KeyTable;
            }
        }
        private ObjectSet<KeyTable> _KeyTable;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<KeyType> KeyType
        {
            get
            {
                if ((_KeyType == null))
                {
                    _KeyType = base.CreateObjectSet<KeyType>("KeyType");
                }
                return _KeyType;
            }
        }
        private ObjectSet<KeyType> _KeyType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrivKeyStorage> PrivKeyStorage
        {
            get
            {
                if ((_PrivKeyStorage == null))
                {
                    _PrivKeyStorage = base.CreateObjectSet<PrivKeyStorage>("PrivKeyStorage");
                }
                return _PrivKeyStorage;
            }
        }
        private ObjectSet<PrivKeyStorage> _PrivKeyStorage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PubKeyStorage> PubKeyStorage
        {
            get
            {
                if ((_PubKeyStorage == null))
                {
                    _PubKeyStorage = base.CreateObjectSet<PubKeyStorage>("PubKeyStorage");
                }
                return _PubKeyStorage;
            }
        }
        private ObjectSet<PubKeyStorage> _PubKeyStorage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MilitaryDegree> MilitaryDegree
        {
            get
            {
                if ((_MilitaryDegree == null))
                {
                    _MilitaryDegree = base.CreateObjectSet<MilitaryDegree>("MilitaryDegree");
                }
                return _MilitaryDegree;
            }
        }
        private ObjectSet<MilitaryDegree> _MilitaryDegree;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserProfile> UserProfile
        {
            get
            {
                if ((_UserProfile == null))
                {
                    _UserProfile = base.CreateObjectSet<UserProfile>("UserProfile");
                }
                return _UserProfile;
            }
        }
        private ObjectSet<UserProfile> _UserProfile;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contacts> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contacts>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contacts> _Contacts;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Users(aspnet_Users aspnet_Users)
        {
            base.AddObject("aspnet_Users", aspnet_Users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the KeyTable EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToKeyTable(KeyTable keyTable)
        {
            base.AddObject("KeyTable", keyTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the KeyType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToKeyType(KeyType keyType)
        {
            base.AddObject("KeyType", keyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrivKeyStorage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrivKeyStorage(PrivKeyStorage privKeyStorage)
        {
            base.AddObject("PrivKeyStorage", privKeyStorage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PubKeyStorage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPubKeyStorage(PubKeyStorage pubKeyStorage)
        {
            base.AddObject("PubKeyStorage", pubKeyStorage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MilitaryDegree EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMilitaryDegree(MilitaryDegree militaryDegree)
        {
            base.AddObject("MilitaryDegree", militaryDegree);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserProfile EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserProfile(UserProfile userProfile)
        {
            base.AddObject("UserProfile", userProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contacts contacts)
        {
            base.AddObject("Contacts", contacts);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlexDBModel", Name="aspnet_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Users object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static aspnet_Users Createaspnet_Users(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            aspnet_Users aspnet_Users = new aspnet_Users();
            aspnet_Users.ApplicationId = applicationId;
            aspnet_Users.UserId = userId;
            aspnet_Users.UserName = userName;
            aspnet_Users.LoweredUserName = loweredUserName;
            aspnet_Users.IsAnonymous = isAnonymous;
            aspnet_Users.LastActivityDate = lastActivityDate;
            return aspnet_Users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlexDBModel", "FK_UserProfile_aspnet_Users", "UserProfile")]
        public EntityCollection<UserProfile> UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserProfile>("FlexDBModel.FK_UserProfile_aspnet_Users", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserProfile>("FlexDBModel.FK_UserProfile_aspnet_Users", "UserProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlexDBModel", Name="Contacts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contacts : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contacts object.
        /// </summary>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        public static Contacts CreateContacts(global::System.Guid contactID)
        {
            Contacts contacts = new Contacts();
            contacts.ContactID = contactID;
            return contacts;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                if (_ContactID != value)
                {
                    OnContactIDChanging(value);
                    ReportPropertyChanging("ContactID");
                    _ContactID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactID");
                    OnContactIDChanged();
                }
            }
        }
        private global::System.Guid _ContactID;
        partial void OnContactIDChanging(global::System.Guid value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumHome
        {
            get
            {
                return _PhoneNumHome;
            }
            set
            {
                OnPhoneNumHomeChanging(value);
                ReportPropertyChanging("PhoneNumHome");
                _PhoneNumHome = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumHome");
                OnPhoneNumHomeChanged();
            }
        }
        private global::System.String _PhoneNumHome;
        partial void OnPhoneNumHomeChanging(global::System.String value);
        partial void OnPhoneNumHomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumMobile
        {
            get
            {
                return _PhoneNumMobile;
            }
            set
            {
                OnPhoneNumMobileChanging(value);
                ReportPropertyChanging("PhoneNumMobile");
                _PhoneNumMobile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumMobile");
                OnPhoneNumMobileChanged();
            }
        }
        private global::System.String _PhoneNumMobile;
        partial void OnPhoneNumMobileChanging(global::System.String value);
        partial void OnPhoneNumMobileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumWorkOS
        {
            get
            {
                return _PhoneNumWorkOS;
            }
            set
            {
                OnPhoneNumWorkOSChanging(value);
                ReportPropertyChanging("PhoneNumWorkOS");
                _PhoneNumWorkOS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumWorkOS");
                OnPhoneNumWorkOSChanged();
            }
        }
        private global::System.String _PhoneNumWorkOS;
        partial void OnPhoneNumWorkOSChanging(global::System.String value);
        partial void OnPhoneNumWorkOSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumWorkGTS
        {
            get
            {
                return _PhoneNumWorkGTS;
            }
            set
            {
                OnPhoneNumWorkGTSChanging(value);
                ReportPropertyChanging("PhoneNumWorkGTS");
                _PhoneNumWorkGTS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumWorkGTS");
                OnPhoneNumWorkGTSChanged();
            }
        }
        private global::System.String _PhoneNumWorkGTS;
        partial void OnPhoneNumWorkGTSChanging(global::System.String value);
        partial void OnPhoneNumWorkGTSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlexDBModel", "FK_UserProfile_Contacts", "UserProfile")]
        public UserProfile UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("FlexDBModel.FK_UserProfile_Contacts", "UserProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("FlexDBModel.FK_UserProfile_Contacts", "UserProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserProfile> UserProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserProfile>("FlexDBModel.FK_UserProfile_Contacts", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserProfile>("FlexDBModel.FK_UserProfile_Contacts", "UserProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlexDBModel", Name="KeyTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KeyTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new KeyTable object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="keyType">Initial value of the KeyType property.</param>
        public static KeyTable CreateKeyTable(global::System.Int32 id, global::System.Int32 keyType)
        {
            KeyTable keyTable = new KeyTable();
            keyTable.Id = id;
            keyTable.KeyType = keyType;
            return keyTable;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyType
        {
            get
            {
                return _KeyType;
            }
            set
            {
                OnKeyTypeChanging(value);
                ReportPropertyChanging("KeyType");
                _KeyType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KeyType");
                OnKeyTypeChanged();
            }
        }
        private global::System.Int32 _KeyType;
        partial void OnKeyTypeChanging(global::System.Int32 value);
        partial void OnKeyTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HostIdentity
        {
            get
            {
                return _HostIdentity;
            }
            set
            {
                OnHostIdentityChanging(value);
                ReportPropertyChanging("HostIdentity");
                _HostIdentity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HostIdentity");
                OnHostIdentityChanged();
            }
        }
        private global::System.String _HostIdentity;
        partial void OnHostIdentityChanging(global::System.String value);
        partial void OnHostIdentityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PubKeyID
        {
            get
            {
                return _PubKeyID;
            }
            set
            {
                OnPubKeyIDChanging(value);
                ReportPropertyChanging("PubKeyID");
                _PubKeyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PubKeyID");
                OnPubKeyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PubKeyID;
        partial void OnPubKeyIDChanging(Nullable<global::System.Int32> value);
        partial void OnPubKeyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrivKeyID
        {
            get
            {
                return _PrivKeyID;
            }
            set
            {
                OnPrivKeyIDChanging(value);
                ReportPropertyChanging("PrivKeyID");
                _PrivKeyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrivKeyID");
                OnPrivKeyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PrivKeyID;
        partial void OnPrivKeyIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrivKeyIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlexDBModel", "FK_KeyTable_KeyType", "KeyType")]
        public KeyType KeyType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KeyType>("FlexDBModel.FK_KeyTable_KeyType", "KeyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KeyType>("FlexDBModel.FK_KeyTable_KeyType", "KeyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<KeyType> KeyType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KeyType>("FlexDBModel.FK_KeyTable_KeyType", "KeyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<KeyType>("FlexDBModel.FK_KeyTable_KeyType", "KeyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlexDBModel", "FK_KeyTable_PrivKeyStorage", "PrivKeyStorage")]
        public PrivKeyStorage PrivKeyStorage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivKeyStorage>("FlexDBModel.FK_KeyTable_PrivKeyStorage", "PrivKeyStorage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivKeyStorage>("FlexDBModel.FK_KeyTable_PrivKeyStorage", "PrivKeyStorage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrivKeyStorage> PrivKeyStorageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivKeyStorage>("FlexDBModel.FK_KeyTable_PrivKeyStorage", "PrivKeyStorage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrivKeyStorage>("FlexDBModel.FK_KeyTable_PrivKeyStorage", "PrivKeyStorage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlexDBModel", "FK_KeyTable_PubKeyStorage", "PubKeyStorage")]
        public PubKeyStorage PubKeyStorage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PubKeyStorage>("FlexDBModel.FK_KeyTable_PubKeyStorage", "PubKeyStorage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PubKeyStorage>("FlexDBModel.FK_KeyTable_PubKeyStorage", "PubKeyStorage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PubKeyStorage> PubKeyStorageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PubKeyStorage>("FlexDBModel.FK_KeyTable_PubKeyStorage", "PubKeyStorage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PubKeyStorage>("FlexDBModel.FK_KeyTable_PubKeyStorage", "PubKeyStorage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlexDBModel", "FK_UserProfile_KeyTable", "UserProfile")]
        public EntityCollection<UserProfile> UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserProfile>("FlexDBModel.FK_UserProfile_KeyTable", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserProfile>("FlexDBModel.FK_UserProfile_KeyTable", "UserProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlexDBModel", Name="KeyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class KeyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new KeyType object.
        /// </summary>
        /// <param name="keyTypeId">Initial value of the KeyTypeId property.</param>
        public static KeyType CreateKeyType(global::System.Int32 keyTypeId)
        {
            KeyType keyType = new KeyType();
            keyType.KeyTypeId = keyTypeId;
            return keyType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeyTypeId
        {
            get
            {
                return _KeyTypeId;
            }
            set
            {
                if (_KeyTypeId != value)
                {
                    OnKeyTypeIdChanging(value);
                    ReportPropertyChanging("KeyTypeId");
                    _KeyTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeyTypeId");
                    OnKeyTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _KeyTypeId;
        partial void OnKeyTypeIdChanging(global::System.Int32 value);
        partial void OnKeyTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypeName
        {
            get
            {
                return _TypeName;
            }
            set
            {
                OnTypeNameChanging(value);
                ReportPropertyChanging("TypeName");
                _TypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypeName");
                OnTypeNameChanged();
            }
        }
        private global::System.String _TypeName;
        partial void OnTypeNameChanging(global::System.String value);
        partial void OnTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlexDBModel", "FK_KeyTable_KeyType", "KeyTable")]
        public EntityCollection<KeyTable> KeyTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KeyTable>("FlexDBModel.FK_KeyTable_KeyType", "KeyTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KeyTable>("FlexDBModel.FK_KeyTable_KeyType", "KeyTable", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlexDBModel", Name="MilitaryDegree")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MilitaryDegree : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MilitaryDegree object.
        /// </summary>
        /// <param name="degreeID">Initial value of the DegreeID property.</param>
        public static MilitaryDegree CreateMilitaryDegree(global::System.Int32 degreeID)
        {
            MilitaryDegree militaryDegree = new MilitaryDegree();
            militaryDegree.DegreeID = degreeID;
            return militaryDegree;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DegreeID
        {
            get
            {
                return _DegreeID;
            }
            set
            {
                if (_DegreeID != value)
                {
                    OnDegreeIDChanging(value);
                    ReportPropertyChanging("DegreeID");
                    _DegreeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DegreeID");
                    OnDegreeIDChanged();
                }
            }
        }
        private global::System.Int32 _DegreeID;
        partial void OnDegreeIDChanging(global::System.Int32 value);
        partial void OnDegreeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DegreeName
        {
            get
            {
                return _DegreeName;
            }
            set
            {
                OnDegreeNameChanging(value);
                ReportPropertyChanging("DegreeName");
                _DegreeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DegreeName");
                OnDegreeNameChanged();
            }
        }
        private global::System.String _DegreeName;
        partial void OnDegreeNameChanging(global::System.String value);
        partial void OnDegreeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlexDBModel", "FK_UserProfile_MilitaryDegree", "UserProfile")]
        public EntityCollection<UserProfile> UserProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserProfile>("FlexDBModel.FK_UserProfile_MilitaryDegree", "UserProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserProfile>("FlexDBModel.FK_UserProfile_MilitaryDegree", "UserProfile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlexDBModel", Name="PrivKeyStorage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrivKeyStorage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrivKeyStorage object.
        /// </summary>
        /// <param name="privKeyId">Initial value of the PrivKeyId property.</param>
        public static PrivKeyStorage CreatePrivKeyStorage(global::System.Int32 privKeyId)
        {
            PrivKeyStorage privKeyStorage = new PrivKeyStorage();
            privKeyStorage.PrivKeyId = privKeyId;
            return privKeyStorage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PrivKeyId
        {
            get
            {
                return _PrivKeyId;
            }
            set
            {
                if (_PrivKeyId != value)
                {
                    OnPrivKeyIdChanging(value);
                    ReportPropertyChanging("PrivKeyId");
                    _PrivKeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PrivKeyId");
                    OnPrivKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _PrivKeyId;
        partial void OnPrivKeyIdChanging(global::System.Int32 value);
        partial void OnPrivKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] KeyBody
        {
            get
            {
                return StructuralObject.GetValidValue(_KeyBody);
            }
            set
            {
                OnKeyBodyChanging(value);
                ReportPropertyChanging("KeyBody");
                _KeyBody = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KeyBody");
                OnKeyBodyChanged();
            }
        }
        private global::System.Byte[] _KeyBody;
        partial void OnKeyBodyChanging(global::System.Byte[] value);
        partial void OnKeyBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> GenerationDateTime
        {
            get
            {
                return _GenerationDateTime;
            }
            set
            {
                OnGenerationDateTimeChanging(value);
                ReportPropertyChanging("GenerationDateTime");
                _GenerationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenerationDateTime");
                OnGenerationDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _GenerationDateTime;
        partial void OnGenerationDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnGenerationDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlexDBModel", "FK_KeyTable_PrivKeyStorage", "KeyTable")]
        public EntityCollection<KeyTable> KeyTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KeyTable>("FlexDBModel.FK_KeyTable_PrivKeyStorage", "KeyTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KeyTable>("FlexDBModel.FK_KeyTable_PrivKeyStorage", "KeyTable", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlexDBModel", Name="PubKeyStorage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PubKeyStorage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PubKeyStorage object.
        /// </summary>
        /// <param name="pubKeyId">Initial value of the PubKeyId property.</param>
        public static PubKeyStorage CreatePubKeyStorage(global::System.Int32 pubKeyId)
        {
            PubKeyStorage pubKeyStorage = new PubKeyStorage();
            pubKeyStorage.PubKeyId = pubKeyId;
            return pubKeyStorage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PubKeyId
        {
            get
            {
                return _PubKeyId;
            }
            set
            {
                if (_PubKeyId != value)
                {
                    OnPubKeyIdChanging(value);
                    ReportPropertyChanging("PubKeyId");
                    _PubKeyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PubKeyId");
                    OnPubKeyIdChanged();
                }
            }
        }
        private global::System.Int32 _PubKeyId;
        partial void OnPubKeyIdChanging(global::System.Int32 value);
        partial void OnPubKeyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KeyBody
        {
            get
            {
                return _KeyBody;
            }
            set
            {
                OnKeyBodyChanging(value);
                ReportPropertyChanging("KeyBody");
                _KeyBody = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KeyBody");
                OnKeyBodyChanged();
            }
        }
        private global::System.String _KeyBody;
        partial void OnKeyBodyChanging(global::System.String value);
        partial void OnKeyBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> GenerationDateTime
        {
            get
            {
                return _GenerationDateTime;
            }
            set
            {
                OnGenerationDateTimeChanging(value);
                ReportPropertyChanging("GenerationDateTime");
                _GenerationDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenerationDateTime");
                OnGenerationDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _GenerationDateTime;
        partial void OnGenerationDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnGenerationDateTimeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlexDBModel", "FK_KeyTable_PubKeyStorage", "KeyTable")]
        public EntityCollection<KeyTable> KeyTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<KeyTable>("FlexDBModel.FK_KeyTable_PubKeyStorage", "KeyTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<KeyTable>("FlexDBModel.FK_KeyTable_PubKeyStorage", "KeyTable", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FlexDBModel", Name="UserProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserProfile object.
        /// </summary>
        /// <param name="userProfileID">Initial value of the UserProfileID property.</param>
        public static UserProfile CreateUserProfile(global::System.Guid userProfileID)
        {
            UserProfile userProfile = new UserProfile();
            userProfile.UserProfileID = userProfileID;
            return userProfile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserProfileID
        {
            get
            {
                return _UserProfileID;
            }
            set
            {
                if (_UserProfileID != value)
                {
                    OnUserProfileIDChanging(value);
                    ReportPropertyChanging("UserProfileID");
                    _UserProfileID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserProfileID");
                    OnUserProfileIDChanged();
                }
            }
        }
        private global::System.Guid _UserProfileID;
        partial void OnUserProfileIDChanging(global::System.Guid value);
        partial void OnUserProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentName
        {
            get
            {
                return _ParentName;
            }
            set
            {
                OnParentNameChanging(value);
                ReportPropertyChanging("ParentName");
                _ParentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParentName");
                OnParentNameChanged();
            }
        }
        private global::System.String _ParentName;
        partial void OnParentNameChanging(global::System.String value);
        partial void OnParentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DegreeID
        {
            get
            {
                return _DegreeID;
            }
            set
            {
                OnDegreeIDChanging(value);
                ReportPropertyChanging("DegreeID");
                _DegreeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DegreeID");
                OnDegreeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DegreeID;
        partial void OnDegreeIDChanging(Nullable<global::System.Int32> value);
        partial void OnDegreeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfBirth;
        partial void OnDateOfBirthChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Photo
        {
            get
            {
                return StructuralObject.GetValidValue(_Photo);
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Post
        {
            get
            {
                return _Post;
            }
            set
            {
                OnPostChanging(value);
                ReportPropertyChanging("Post");
                _Post = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Post");
                OnPostChanged();
            }
        }
        private global::System.String _Post;
        partial void OnPostChanging(global::System.String value);
        partial void OnPostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> LoginID
        {
            get
            {
                return _LoginID;
            }
            set
            {
                OnLoginIDChanging(value);
                ReportPropertyChanging("LoginID");
                _LoginID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginID");
                OnLoginIDChanged();
            }
        }
        private Nullable<global::System.Guid> _LoginID;
        partial void OnLoginIDChanging(Nullable<global::System.Guid> value);
        partial void OnLoginIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> KeyID
        {
            get
            {
                return _KeyID;
            }
            set
            {
                OnKeyIDChanging(value);
                ReportPropertyChanging("KeyID");
                _KeyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KeyID");
                OnKeyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _KeyID;
        partial void OnKeyIDChanging(Nullable<global::System.Int32> value);
        partial void OnKeyIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlexDBModel", "FK_UserProfile_aspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("FlexDBModel.FK_UserProfile_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("FlexDBModel.FK_UserProfile_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("FlexDBModel.FK_UserProfile_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("FlexDBModel.FK_UserProfile_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlexDBModel", "FK_UserProfile_KeyTable", "KeyTable")]
        public KeyTable KeyTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KeyTable>("FlexDBModel.FK_UserProfile_KeyTable", "KeyTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KeyTable>("FlexDBModel.FK_UserProfile_KeyTable", "KeyTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<KeyTable> KeyTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<KeyTable>("FlexDBModel.FK_UserProfile_KeyTable", "KeyTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<KeyTable>("FlexDBModel.FK_UserProfile_KeyTable", "KeyTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlexDBModel", "FK_UserProfile_MilitaryDegree", "MilitaryDegree")]
        public MilitaryDegree MilitaryDegree
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryDegree>("FlexDBModel.FK_UserProfile_MilitaryDegree", "MilitaryDegree").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryDegree>("FlexDBModel.FK_UserProfile_MilitaryDegree", "MilitaryDegree").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MilitaryDegree> MilitaryDegreeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MilitaryDegree>("FlexDBModel.FK_UserProfile_MilitaryDegree", "MilitaryDegree");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MilitaryDegree>("FlexDBModel.FK_UserProfile_MilitaryDegree", "MilitaryDegree", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FlexDBModel", "FK_UserProfile_Contacts", "Contacts")]
        public Contacts Contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contacts>("FlexDBModel.FK_UserProfile_Contacts", "Contacts").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contacts>("FlexDBModel.FK_UserProfile_Contacts", "Contacts").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contacts> ContactsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contacts>("FlexDBModel.FK_UserProfile_Contacts", "Contacts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contacts>("FlexDBModel.FK_UserProfile_Contacts", "Contacts", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
