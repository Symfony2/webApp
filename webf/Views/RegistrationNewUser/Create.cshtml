@model webf.Models.EntityModel.UserProfile
@{
    ViewBag.Title = "Create";
}
@section scripts
{
    @Content.Script("jquery.validate.min.js", Url)
    @Content.Script("jquery.validate.unobtrusive.min.js", Url)
    

    <script type="text/javascript">
        $(document).ready(function () {
            $("#DateOfBirth").datepicker({
                changeMonth: true,
                changeYear: true
            });

            $('#ImgFile').change(function () {
                var extension = this.files[0].name.split('.').pop().toLowerCase();
                if ($.inArray(extension, ['jpg', 'jpeg']) == -1) {
                    $("#ImgFile").val("");
                    alert('Файл не являеться изображением нужного формата!');
                }
            });

            /*$('#ImgFile').bind('change', function () {

                var weight = this.files[0].size;
                if (weight > 1000000) {
                    $("#ImgFile").val("");
                    alert("Размер изображения не должен превышать 1Мб!");
                }

            });*/

            $('.photoContainer .imagePreview').Jcrop({
                    onChange: showCoords,
                    onSelect: showCoords,
                    aspectRatio: 1,
                    bgColor: 'white',
                    boxWidth: 450, boxHeight: 400
                }, function () {
                    jcrop_api = this;
            });

            

            //var data = getImgSize("/Content/Image/naz.jpg");
        });
        
        function showPreview(coords) {
                var rx = 200 / coords.w;
                var ry = 200 / coords.h;

                preview.css({
                    width: Math.round(rx * 500) + 'px',
                    height: Math.round(ry * 370) + 'px',
                    marginLeft: '-' + Math.round(rx * coords.x) + 'px',
                    marginTop: '-' + Math.round(ry * coords.y) + 'px'
                });
            }
        function showCoords(c) {
            // variables can be accessed here as
            //c.x, c.y, c.x2, c.y2, c.w, c.h
            /*alert(c.w);*/
            
            $('.photoContainer #cor_x1').val(c.x);
            $('.photoContainer #cor_y1').val(c.y);
            $('.photoContainer #cor_x2').val(c.x2);
            $('.photoContainer #cor_y2').val(c.y2);
            $('.photoContainer #width').val(c.w);
            $('.photoContainer #height').val(c.h);
            
        };
        
        
        function getImgSize(imgSrc) {
            var newImg = new Image();
            newImg.src = imgSrc;
            var height = newImg.height;
            var width = newImg.width;
            p = $(newImg).ready(function () {
                return { width: newImg.width, height: newImg.height };
            });
            return { width: p[0]['width'], height: p[0]['height'] };
        }

        var jcrop_api;
        function readURL(input) {

            var weight = input.files[0].size;
            
            if (weight > 1000000) {
                alert("Размер изображения не должен превышать 1Мб!");
            }
            else {
                
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        jcrop_api.setImage(e.target.result);
                        
                    }
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        

        
    </script>
}
<h2>
    Create</h2>
@using (Html.BeginForm("Create", "RegistrationNewUser", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Бланк регистрации</legend>
        <table class="tableCSS">
            <tr>
                <div class="photoContainer">
                    <div class="imageBox" align="center">
                        <img src="#" alt="my image" class="imagePreview" />
                    </div>
                    
                        
                    <div class="InpImageCls">
                        <p class="tblParagraph">
                            Фотография пользователя (только JPG, JPEG формат).<br />
                            Размер не должен превышать 1Мбайт</p>
                        
                        <input type="file" id="ImgFile" name="ImgFile" onchange="readURL(this)"/>
                        
                    </div>

                    <input id="cor_x1" name="cor_x1" type="hidden" />
                    <input id="cor_y1" name="cor_y1" type="hidden" />
                    <input id="cor_x2" name="cor_x2" type="hidden" />
                    <input id="cor_y2" name="cor_y2" type="hidden" />
                    <input id="width" name="width"type="hidden" />
                    <input id="height" name="height" type="hidden" />
                    
                </div>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.LastName)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.LastName)
                        @Html.ValidationMessageFor(model => model.LastName)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Post_ID, "Должность")
                    </div>
                    <div class="editor-field">
                        @Html.DropDownList("Post_ID", String.Empty)
                        @Html.ValidationMessageFor(model => model.Post_ID)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.FirstName)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.FirstName)
                        @Html.ValidationMessageFor(model => model.FirstName)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.WorkArea_ID, "Направление")
                    </div>
                    <div class="editor-field">
                        @Html.DropDownList("WorkArea_ID", String.Empty)
                        @Html.ValidationMessageFor(model => model.WorkArea_ID)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ParentName)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.ParentName)
                        @Html.ValidationMessageFor(model => model.ParentName)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PhoneNumWorkGTS)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.PhoneNumWorkGTS)
                        @Html.ValidationMessageFor(model => model.PhoneNumWorkGTS)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.DegreeID, "Звание")
                    </div>
                    <div class="editor-field">
                        @Html.DropDownList("DegreeID", String.Empty)
                        @Html.ValidationMessageFor(model => model.DegreeID)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PhoneNumHome)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.PhoneNumHome)
                        @Html.ValidationMessageFor(model => model.PhoneNumHome)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.DateOfBirth)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.DateOfBirth)
                        @Html.ValidationMessageFor(model => model.DateOfBirth)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PhoneNumMobile)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.PhoneNumMobile)
                        @Html.ValidationMessageFor(model => model.PhoneNumMobile)
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Email)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Email)
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>
                </td>
                <td>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PhoneNumWorkOS)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.PhoneNumWorkOS)
                        @Html.ValidationMessageFor(model => model.PhoneNumWorkOS)
                    </div>
                </td>
            </tr>
           
            @*<div class="editor-label">
                        @Html.LabelFor(model => model.LoginID, "aspnet_Users")
                    </div>
                    <div class="editor-field">
                        @Html.DropDownList("LoginID", String.Empty)
                        @Html.ValidationMessageFor(model => model.LoginID)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.KeyID, "KeyTable")
                    </div>
                    <div class="editor-field">
                        @Html.DropDownList("KeyID", String.Empty)
                        @Html.ValidationMessageFor(model => model.KeyID)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ObeysTo, "UserProfile2")
                    </div>
                    <div class="editor-field">
                        @Html.DropDownList("ObeysTo", String.Empty)
                        @Html.ValidationMessageFor(model => model.ObeysTo)
                    </div>*@
        </table>
        <p>
            <input type="submit" value="Сохранить" />
        </p>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
